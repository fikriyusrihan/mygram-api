{
    "swagger": "2.0",
    "info": {
        "description": "My Gram API is a final project of Hacktiv8 Golang Bootcamp. This API is used to manage social media accounts and photos.",
        "title": "My Gram API Documentation",
        "contact": {
            "name": "Fikri Yusrihan",
            "url": "https://fikriyusrihan.github.io",
            "email": "fikriyusrihan@gmail.com"
        },
        "license": {
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "host": "localhost:8000",
    "basePath": "/",
    "paths": {
        "/photos": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all photos. User must be authenticated before using this endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photos"
                ],
                "summary": "Get Photos",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.ApiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.PhotoResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create new photo with title, caption, and photo url. User must be authenticated before using this endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photos"
                ],
                "summary": "Create Photo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Photo Request Payload",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PhotoRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.ApiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.PhotoResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/photos/{photoId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get photo by photo id. User must be authenticated before using this endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photos"
                ],
                "summary": "Get Photo By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Photo ID",
                        "name": "PhotoId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.ApiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.PhotoDetailResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update photo with title, caption, and photo url. User must be authenticated before using this endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photos"
                ],
                "summary": "Update Photo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Photo ID",
                        "name": "PhotoId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Photo Request Payload",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PhotoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.ApiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.PhotoResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete photo by photo id. Only the owner of the photo can delete it. User must be authenticated before using this endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photos"
                ],
                "summary": "Delete Photo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Photo ID",
                        "name": "PhotoId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponse"
                        }
                    }
                }
            }
        },
        "/photos/{photoId}/comments": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get comments by photo id. User must be authenticated before using this endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Get Comments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Photo ID",
                        "name": "PhotoId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.ApiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.CommentResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create new comment with comment text. User must be authenticated before using this endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Create Comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Photo ID",
                        "name": "PhotoId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Comment Request Payload",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CommentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.ApiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.CommentResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/photos/{photoId}/comments/{commentId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get comment by id. User must be authenticated before using this endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Get Comment By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Photo ID",
                        "name": "PhotoId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Comment ID",
                        "name": "CommentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.ApiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.CommentResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update comment with comment text. User must be authenticated before using this endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Update Comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Photo ID",
                        "name": "PhotoId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Comment ID",
                        "name": "CommentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Comment Request Payload",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CommentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.ApiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.CommentResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete comment. Only comment owner can delete the comment. User must be authenticated before using this endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Delete Comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Photo ID",
                        "name": "PhotoId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Comment ID",
                        "name": "CommentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponse"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Authenticate registered user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticate User",
                "parameters": [
                    {
                        "description": "User Request Payload",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.ApiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.AuthResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "description": "Register new user with username, email, age, and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register User",
                "parameters": [
                    {
                        "description": "User Request Payload",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.ApiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.UserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users/{userId}/social_media": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get social media by user id. User must be authenticated before using this endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Social Media"
                ],
                "summary": "Get Social Media By User ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "UserID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.ApiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.SocialMediaResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create new social media with name and url. User must be authenticated before using this endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Social Media"
                ],
                "summary": "Create Social Media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "UserID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Social Media Request Payload",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SocialMediaRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.ApiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.SocialMediaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users/{userId}/social_media/{socialMediaId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get social media by user id. User must be authenticated before using this endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Social Media"
                ],
                "summary": "Get Social Media By User ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "UserID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Social Media ID",
                        "name": "SocialMediaID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.ApiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.SocialMediaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update social media with name and url. User must be authenticated before using this endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Social Media"
                ],
                "summary": "Update Social Media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "UserID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Social Media ID",
                        "name": "SocialMediaID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Social Media Request Payload",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SocialMediaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.ApiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.SocialMediaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete social media. Only the owner of the user can delete the social media. User must be authenticated before using this endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Social Media"
                ],
                "summary": "Delete Social Media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "UserID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Social Media ID",
                        "name": "SocialMediaID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ApiResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string",
                    "example": "Your request has been processed successfully"
                },
                "status": {
                    "type": "string",
                    "example": "OK"
                }
            }
        },
        "dto.AuthRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "fikriyusrihan@gmail.com"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "supersecret"
                }
            }
        },
        "dto.AuthResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIn0.ri7_-S3RIefxm6JxzsJSWVSyvSTOIivZgcuVDqaR3fQ"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.CommentRequest": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Nice photo!"
                }
            }
        },
        "dto.CommentResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-08-01T00:00:00Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "message": {
                    "type": "string",
                    "example": "Nice photo!"
                },
                "photo_id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-08-01T00:00:00Z"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.PhotoDetailResponse": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string",
                    "example": "I had a great time in Bali!"
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CommentResponse"
                    }
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-08-01T00:00:00Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "photo_url": {
                    "type": "string",
                    "example": "https://my-gram.com/photos/1.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "Vacation in Bali"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-08-01T00:00:00Z"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.PhotoRequest": {
            "type": "object",
            "required": [
                "photo_url",
                "title"
            ],
            "properties": {
                "caption": {
                    "type": "string",
                    "example": "I had a great time in Bali!"
                },
                "photo_url": {
                    "type": "string",
                    "example": "https://my-gram.com/photos/1.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "Vacation in Bali"
                }
            }
        },
        "dto.PhotoResponse": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string",
                    "example": "I had a great time in Bali!"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "photo_url": {
                    "type": "string",
                    "example": "https://my-gram.com/photos/1.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "Vacation in Bali"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.SocialMediaRequest": {
            "type": "object",
            "required": [
                "name",
                "social_media_url"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Instagram"
                },
                "social_media_url": {
                    "type": "string",
                    "example": "https://instagram.com/fikriyusrihan"
                }
            }
        },
        "dto.SocialMediaResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-08-01T00:00:00Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Instagram"
                },
                "social_media_url": {
                    "type": "string",
                    "example": "https://instagram.com/fikriyusrihan"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-08-01T00:00:00Z"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.UserRequest": {
            "type": "object",
            "required": [
                "age",
                "email",
                "password",
                "username"
            ],
            "properties": {
                "age": {
                    "type": "integer",
                    "minimum": 8,
                    "example": 24
                },
                "email": {
                    "type": "string",
                    "example": "fikriyusrihan@gmail.com"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "supersecret"
                },
                "username": {
                    "type": "string",
                    "example": "fikriyusrihan"
                }
            }
        },
        "dto.UserResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 24
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-08-01T00:00:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "fikriyusrihan@gmail.com"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-08-01T00:00:00Z"
                },
                "username": {
                    "type": "string",
                    "example": "fikriyusrihan"
                }
            }
        }
    }
}